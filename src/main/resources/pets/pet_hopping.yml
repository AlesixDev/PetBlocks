# Unique template identifier
name: classic
# The version of this file.
# You can ignore this value, if it is not mentioned in the patchNotes.
version: 1.0
# The initial settings of the pet on first spawn.
pet:
  # The initial name of the pet shown above the pet on first spawn. Supports ChatColors.
  displayName: "%petblocks_owner_name%'s pet"
  # The initial visibility the pet starts with on first spawn.
  # Should the pet be shown to all players (e.g. "ALL") or shown to just the owner (e.g. "OWNER")?
  visibility: "ALL"
  # The initial loop state the pet starts with on first spawn.
  loop: "idle"
  # Should the pet immediately spawn after creation with the /petblocks create command?
  spawned: true
  # Should the player immediately ride on the pet on initial spawn?
  # Possible values "NO", "GROUND", "HAT"
  ridingState: "NO"
  # All item properties.
  item:
    # TypeName the pet is represented. For version compatibility, multiple identifiers can be added by separating with a comma.
    typeName: "minecraft:player_head,397"
    # Optional durability tag.
    durability: 3
    # Optional NBT Tags in standard Minecraft NBT format.
    nbt: "{Unbreakable:1}"
  physics:
    # The amount of acceleration in minus y axe direction which is applied after each tick.
    gravity: 0.05
    # If a velocity is applied to the pet, this is the percentage of the speed the pet preserves after each tick.
    # e.g. 1.0 = Pet continuous to fly with the same speed into infinity.
    # e.g. 0.8 = Pet speed is reduced to 80% of its previous value after each tick.
    relativeVelocityReduce: 0.8
    # If a velocity is applied to the pet, this is the absolute value which is taken from the velocity speed vector after each tick.
    # e.g. 0.005 means that the speed is reduced by 0.005 after each tick
    absoluteVelocityReduce: 0.0005
    # The distance the pet hovers above the ground. Depending on the entity type this should be set lower or higher.
    groundOffset: 0.35

#
# Defines the action a pet should perform on certain events.
#
events:
  # You cannot add new events here. The event names are fixed.
  leftClick:
    actions:
      - name: "Apply knockback to the pet if the owner punches it"
        condition: "%petblocks_eventPlayer_name% == %petblocks_owner_name%"
        type: "JAVASCRIPT"
        debug: true
        variable: "knockbackX"
        js: |
          function calculateVector() {
            const positionPlayer = {
              x: %petblocks_owner_locationX%,
              y: %petblocks_owner_locationY%
              z: %petblocks_owner_locationZ%
            }
            const positionPet = {
              x: %petblocks_pet_locationX%,
              y: %petblocks_pet_locationY%
              z: %petblocks_pet_locationZ%
            }
            const directionVector = {
              x: positionPet.x - positionPlayer.x,
              y: positionPet.y - positionPlayer.y,
              z: positionPet.z - positionPlayer.z
            };
            const magnitude = Math.sqrt(
              directionVector.x ** 2 + directionVector.y ** 2 + directionVector.z ** 2
            );
            const normalizedMultipliedVector = {
              x: directionVector.x / magnitude * 0.5,
              y: directionVector.y / magnitude * 0.5,
              z: directionVector.z / magnitude * 0.5
            };
            return normalizedMultipliedVector
          }
          calculateVector().x
          
          

#
# Defines the action a pet should perform in an interval on its own.
#
loops:
  # You can add/remove new loops as you want here.
  # Give it a name like "idle2" and define the list of actions below.
  idle:
    actions:
      - name: "Delay Action"
        type: "DELAY"
        debug: true
        ticks: 20
      - name: "Look at owner with a 60% change."
        condition: "Math.floor(Math.random() * 100) > 40"
        debug: true
        type: "COMMAND"
        level: "SERVER"
        run:
          - "/petblocks lookatowner %petblocks_pet_name% %petblocks_owner_name%"
      - name: "Switch to moveToOwner if pet is too far away"
        condition: "%petblocks_pet_distanceToOwner% > 10"
        debug: true
        type: "COMMAND"
        level: "SERVER"
        run:
          - "/petblocks loop %petblocks_pet_name% moveToOwner %petblocks_owner_name%"
  moveToOwner:
    actions:
      - name: "Delay Action"
        type: "DELAY"
        debug: true
        ticks: 20
      - name: "Recalculate path and start moving to owner."
        type: "COMMAND"
        level: "SERVER"
        debug: true
        run:
          - "/petblocks moveToOwner %petblocks_pet_name% 0.2 %petblocks_owner_name%"
      - name: "Switch to idle if the pet is beside the player"
        condition: "%petblocks_pet_distanceToOwner% < 4"
        type: "COMMAND"
        level: "SERVER"
        debug: true
        run:
          - "/petblocks loop %petblocks_pet_name% idle %petblocks_owner_name%"
      - name: "Teleport pet to player if the pet is too far away for the pathfinder."
        condition: "%petblocks_pet_distanceToOwner% > 20"
        type: "COMMAND"
        level: "SERVER"
        debug: true
        run:
          - "/petblocks teleport %petblocks_pet_name% %petblocks_owner_locationWorld% %petblocks_owner_locationX% %petblocks_owner_locationY% %petblocks_owner_locationZ% %petblocks_owner_locationYaw% %petblocks_owner_locationPitch% %petblocks_owner_name%"
